<?php
namespace SpiceCRM\modules\Mailboxes\Handlers;

use Exception;
use SpiceCRM\modules\Mailboxes\Mailbox;

class TwillioHandler extends TransportHandler
{
    private $twillioUrl = "https://api.twilio.com/2010-04-01/Accounts/";
    protected $outgoing_settings = [
        'account_sid',
        'auth_token',
        'phone_number_from',
    ];

    protected function initTransportHandler() {
        $this->twillioUrl .= $this->mailbox->account_sid . "/Messages.json";
    }

    public function testConnection($testDestination) {
        $message = [
            'destination_number' => $testDestination,
            'message_body'       => 'This is an autogenerated Test Message from SpiceCRM',
        ];

        try {
            $res = $this->dispatch($message);
            return [
                'result'     => true,
                'message_id' => $res,
            ];
        } catch (Exception $e) {
            $this->log(Mailbox::LOG_DEBUG, $this->mailbox->name . ': ' . $e->getMessage());
            return [
                'errors' => $e->getMessage(),
            ];
        }
    }

    protected function composeEmail($message) {
        $this->checkTextMessageClass($message);

        $message = [
            'destination_number' => $message->msisdn,
            'message_body'       => $message->description,
        ];

        return $message;
    }

    protected function dispatch($message) {
        $params = [
            'From' => $this->mailbox->phone_number_from,
            'To'   => $message['destination_number'],
            'Body' => $message['message_body'],
            'StatusCallback' => 'https://demo.spicecrm.io/backend/KREST/twiliowebhooks/handler',
        ];

        $url = $this->twillioUrl;

        $payload = http_build_query($params);

        $curl = curl_init();

        curl_setopt_array($curl, [
            CURLOPT_SSL_VERIFYPEER => false,
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_URL            => $url,
            CURLOPT_POST           => true,
            CURLOPT_POSTFIELDS     => $payload,
            CURLOPT_USERPWD        => $this->mailbox->account_sid . ':' . $this->mailbox->auth_token,
            CURLOPT_HTTPAUTH       => CURLAUTH_BASIC,
            CURLOPT_HTTPHEADER     => [
                'Content-Type: application/x-www-form-urlencoded',
            ],
        ]);

        $response = curl_exec($curl);

        if (isset($response->error)) {
            $this->log(Mailbox::LOG_DEBUG, $this->mailbox->name . ': ' .
                $response->error->code . ': ' . $response->error->message);
            throw new Exception($response->error->code . ': ' . $response->error->message);
        }

        if (!$response) {
            $this->log(Mailbox::LOG_DEBUG, $this->mailbox->name . ': Twillio Response is empty');
            throw new Exception('Twillio Response is empty');
        }

        curl_close($curl);

        $res = json_decode($response);

        if ($res->error_code != null) {
            $this->log(Mailbox::LOG_DEBUG, $this->mailbox->name . ': ' .
                $res->error_code . ': ' . $res->error_message);
            throw new Exception($res->error_code . ': ' . $res->error_message);
            // todo save status failed. add a new field for error message and save it.
        }

        return [
            'message_id' => $res->sid,
            'status'     => $res->status,
        ];
    }
}

// todo sms inbox
